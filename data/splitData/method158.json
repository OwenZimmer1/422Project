{
  "javadoc": "/*** Partition a CLL w.r.t. the first element in the list.\n* The list elements are rearranged so that those which\n* are less that the pivot are placed before it, and those\n* that are greater are placed after them.  Equal elements\n* will be placed in the \"after\" list right after the pivot.\n* The elements may be rearranged arbitrarily otherwise.\n* @param tail the last element of the CLL.\n* There must be at least one element in this list\n* @return new tail\n*/",
  "code": "private Node<E> partition(Node<E> tail) {\nNode<E> cur = tail.next.next;\nNode<E> p = cur;\nE pivot = cur.data;\nNode<E> dum = tail.next;\nNode<E> prev = tail.next;\n\nwhile(cur.data != null) {\nif(comparator.compare(cur.data, pivot) < 0) {\nNode<E> next = cur.next;\nprev.next = cur.next;\ncur.next = dum.next;\ndum.next = cur;\ncur = next;\n}else if(comparator.compare(cur.data, pivot) == 0 && cur != p) {\nNode<E> next = cur.next;\nprev.next = cur.next;\ncur.next = p.next;\np.next = cur;\nif(prev.next != next) prev = prev.next;\ncur = next;\n}else {\nprev = cur;\ncur = cur.next;\n}\n}\n\ntail = prev;\n\nreturn tail;\n}"
}