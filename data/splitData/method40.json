{
  "javadoc": "/*** Place the contents of another sequence (which may be the\n* same one as this!) into this sequence before the current element (if any).\n* @param addend\n*   a sequence whose contents will be placed into this sequence\n* @precondition\n*   The parameter, addend, is not null.\n* @postcondition\n*   The elements from addend have been placed into\n*   this sequence. The current element of this sequence (if any)\n*   is unchanged.  The addend is unchanged.\n* @exception NullPointerException\n*   Indicates that addend is null.\n* @exception OutOfMemoryError\n*   Indicates insufficient memory to increase the size of this sequence.\n**/",
  "code": "public void insertAll(BallSeq addend) {\nassert wellFormed() : \"invariant failed at start of addAll\";\n\nif(addend == null) throw new NullPointerException(\"Sequence is null\");\n\nBallSeq clone = addend.clone();\nensureCapacity(manyItems + clone.manyItems);\nint indexInc = clone.manyItems;\nfor(int i = clone.manyItems - 1; i >= 0; i--) {\ninsert(clone.data[i]);\n}\n\ncurrentIndex += indexInc;\n\n\nassert wellFormed() : \"invariant failed at end of addAll\";\n}",
  "accessModifier": "public",
  "returnType": "void",
  "methodName": "insertAll"
}