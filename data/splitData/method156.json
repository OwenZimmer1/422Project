{
  "method": "/*** Convert a CLL to a string.\n* A problem is signified by a string without a proper ending paren.\n* Use this for debugging.\n* @param tail CLL\n* @return string picture of a CLL\n*/\nprivate static <E> String CLLtoString(Node<E> tail) {\nif (tail == null) return \"<NULL>\";\nNode<E> dummy = tail.next;\nif (dummy == tail) return \"()\";\nif (dummy == null) return \"<NO DUMMY>\";\nif (dummy.data != null) return \"<DUMMY \" + dummy.data + \">\";\nNode<E> head = dummy.next;\nStringBuilder sb = new StringBuilder();\nNode<E> fast = head.next;\nwhile (head != dummy) {\nif (head == null) return sb.toString(); // no closing paren\nif (head == fast) {\nSystem.out.println(\"...\");\nreturn sb.toString();\n}\nif (sb.length() == 0) sb.append(\"(\");\nelse sb.append(\",\");\nsb.append(head.data);\nhead = head.next;\nif (fast != dummy && fast != null) fast = fast.next;\nif (fast != dummy && fast != null) fast = fast.next;\n}\nsb.append(\")\"); // clean close\nreturn sb.toString();\n}"
}