{
  "javadoc": "/*** Compare two parts according to our purposes.\n* We use the supplied comparator except when it\n* says it doesn't care, in which case, we use the (unique) id to\n* distinguish two parts, older first.\n* @param p1 first part, must not be null\n* @param p2 second part, must not be null\n* @return comparison, only 0 if p1 and p2 are the same\n*/",
  "code": "private int compare(FunctionalPart p1, FunctionalPart p2) //Received assistance from Alex K in tutoring center\n{\nif(comparator == null || comparator.compare(p1, p2) == 0)\n{\nif(p1.getId() < p2.getId())\n{\nreturn -1;\n}\nelse if(p1.getId() == p2.getId())\n{\nreturn 0;\n}\nelse if(p1.getId() > p2.getId())\n{\nreturn 1;\n}\n}\nreturn comparator.compare(p1, p2);\n}",
  "method_name": "compare",
  "parameters": "FunctionalPart p1, FunctionalPart p2",
  "return_type": "int",
  "return_variable": "-1",
  "called_methods": [
    "getId"
  ],
  "local_variables": [],
  "thrown_exceptions": []
}