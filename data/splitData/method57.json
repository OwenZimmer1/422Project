{
  "javadoc": "/*** Add a new element to this sequence, before the current element (if any).\n* If the new element would take this sequence beyond its current capacity,\n* then the capacity is increased before adding the new element.\n* @param element\n*   the new element that is being added\n* @postcondition\n*   A new copy of the element has been added to this sequence. If there was\n*   a current element, then the new element is placed before the current\n*   element. If there was no current element, then the new element is placed\n*   at the end of the sequence. In all cases, the new element becomes the\n*   new current element of this sequence.\n* @exception OutOfMemoryError\n*   Indicates insufficient memory for increasing the sequence.\n**/",
  "code": "public void insert(Ball element)\n{\nassert wellFormed() : \"invariant failed at start of insert\";\n\nif(manyNodes == 0) {\ncursor = new Node(element, cursor);\ntail = cursor;\nhead = cursor;\n}\nelse if(cursor == head){\ncursor = new Node(element, cursor);\nhead = cursor;\n}\nelse if(cursor == null) {\ntail.next = new Node(element, null);\nprecursor = tail;\ntail = tail.next;\ncursor = tail;\n}else {\ncursor = new Node(element, cursor);\nprecursor.next = cursor;\n}\n\nmanyNodes++;\n\nassert wellFormed() : \"invariant failed at end of insert\";\n}"
}