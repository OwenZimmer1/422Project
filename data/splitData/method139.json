{
  "method": "/*** Check the invariant.\n* Returns false if any problem is found.\n* @return whether invariant is currently true.\n* If false is returned then exactly one problem has been reported.\n*/\nprivate boolean wellFormed() {\nif(dummy == null) return report(\"dummy is null\");\nif(dummy.count != 0) return report(\"dummy.count isn't 0\");\nif(dummy.left != null) return report(\"dummy.left isn't null\");\nif(dummy.string != null) return report(\"dummy.string isn't null\");\nNode min = dummy.right;\nwhile(min != null && min.left != null) min = min.left;\nif(dummy.next != min)return report(\"dummy.next isn't the min\");\nint n = checkInRange(dummy.right, null, null, min, null);\nif (n < 0) return false; // problem already reported\nif (n != numEntries) return report(\"manyNodes is \" + numEntries + \" but should be \" + n);\nreturn true;\n}"
}