/**
* Remove the current element from this sequence.
* @param - none
* @precondition
*   isCurrent() returns true.
* @postcondition
*   The current element has been removed from this sequence, and the
*   following element (if there is one) is now the new current element.
*   If there was no following element, then there is now no current
*   element.
* @exception IllegalStateException
*   Indicates that there is no current element, so
*   removeCurrent may not be called.
**/
public void removeCurrent( )
{
assert wellFormed() : "invariant failed at start of removeCurrent";

if(!isCurrent()) throw new IllegalStateException("No current element");


for(int i = currentIndex; i < manyItems-1; i++) {
data[i] = data[i+1];
}