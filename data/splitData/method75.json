{
  "javadoc": "/*** Some elements of the players may have changed the\n* way the players are ordered.  This method\n* reorders the list to fix things up.\n* This will use insertion sort for efficiency.\n* In particular if only a constant number of players\n* are in the wrong position, this method will take linear time.\n* If the priority ends up as \"perverse\" (something shows up\n* before the dummy) we discard all team members.\n* (This is not actually ideal for an ADT.)\n*/",
  "code": "public void refreshPriority() {\nassert wellFormed() : \"invariant broken before refresh priority\";\ndummy.sortByPriority(priority);\nif (dummy.getPrevious() != null) {\n// Suddenly the priority shows up as perverse.\ndummy.remove(); // actually removes everyone else.\n}\nassert wellFormed() : \"invariant failed during refresh priority\";\n}",
  "method_name": "refreshPriority",
  "parameters": "",
  "return_type": "void",
  "return_variable": "",
  "called_methods": [
    "wellFormed",
    "sortByPriority",
    "getPrevious",
    "remove"
  ],
  "local_variables": [],
  "thrown_exceptions": [],
  "class_name": "Team"
}