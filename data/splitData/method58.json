{
  "javadoc": "/*** Place the contents of another sequence (which may be the\n* same one as this!) into this sequence before the current element (if any).\n* @param addend\n*   a sequence whose contents will be placed into this sequence\n* @precondition\n*   The parameter, addend, is not null.\n* @postcondition\n*   The elements from addend have been placed into\n*   this sequence. The current element of this sequence (if any)\n*   is unchanged.  The addend is unchanged.\n* @exception NullPointerException\n*   Indicates that addend is null.\n* @exception OutOfMemoryError\n*   Indicates insufficient memory to increase the size of this sequence.\n**/",
  "code": "public void insertAll(BallSeq addend) {\nassert wellFormed() : \"invariant failed at start of addAll\";\nif(addend == null) throw new NullPointerException(\"addend is null\");\n\nif(addend.head == null) return;\nBallSeq clone = addend.clone();\n\nif(manyNodes == 0) {\nhead = clone.head;\ntail = clone.tail;\n}\nelse if (cursor == head){\nhead = clone.head;\nclone.tail.next = cursor;\nprecursor = clone.tail;\n}\nelse if (cursor == null) {\ntail.next = clone.head;\ntail = clone.tail;\n}\nelse {\nprecursor.next = clone.head;\nprecursor = clone.tail;\nclone.tail.next = cursor;\n}\nmanyNodes += clone.manyNodes;\n\nassert wellFormed() : \"invariant failed at end of addAll\";\n}",
  "method_name": "insertAll",
  "parameters": "BallSeq addend",
  "return_type": "void",
  "return_variable": "",
  "called_methods": [
    "wellFormed",
    "NullPointerException",
    "clone"
  ],
  "local_variables": [
    "clone"
  ],
  "thrown_exceptions": [
    "NullPointerException"
  ],
  "class_name": "BallSeq"
}