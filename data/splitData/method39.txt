/*** Add a new element to this sequence, before the current element (if any).
* If the new element would take this sequence beyond its current capacity,
* then the capacity is increased before adding the new element.
* @param element
*   the new element that is being added
* @postcondition
*   A new copy of the element has been added to this sequence. If there was
*   a current element, then the new element is placed before the current
*   element. If there was no current element, then the new element is placed
*   at the end of the sequence. In all cases, the new element becomes the
*   new current element of this sequence.
* @exception OutOfMemoryError
*   Indicates insufficient memory for increasing the sequence's capacity.
**/
public void insert(Ball element)
{
assert wellFormed() : "invariant failed at start of insert";

ensureCapacity(manyItems + 1);

for(int i = manyItems; i > currentIndex; i--) {
data[i] = data[i-1];
}
data[currentIndex] = element;

manyItems++;

assert wellFormed() : "invariant failed at end of insert";
}