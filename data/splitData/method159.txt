/*** Destructively sort a CLL using quicksort, and return it.
* The pivot chose should always be the first element.
* @param l CLL identified by its tail
*/
private Node<E> quicksort(Node<E> tail) {
if(tail.next.next == tail) return tail;

Node<E> pivot = tail.next.next;
Node<E> dum = tail.next;
tail = partition(tail);

Node<E> tail2 = tail.next;
while(tail2.next != pivot) tail2 = tail2.next;
tail2.next = dum;
tail2 = quicksort(tail2);
Node<E> beforeHead = tail2.next.next;
tail2.next = beforeHead;

if(tail == pivot) tail = dum;
tail.next = dum;
dum.next = pivot.next;
tail = quicksort(tail);
Node<E> afterHead = tail.next.next;

tail2.next = pivot;
pivot.next = afterHead;
if(tail.data == null) tail = pivot;
tail.next = dum;
if(beforeHead.data != null) dum.next = beforeHead;

return tail;
}