/*** Check the invariant.
* Returns false if any problem is found.
* @return whether invariant is currently true.
* If false is returned then exactly one problem has been reported.
*/
private boolean wellFormed() {
if(dummy == null) return report("dummy is null");
if(dummy.count != 0) return report("dummy.count isn't 0");
if(dummy.left != null) return report("dummy.left isn't null");
if(dummy.string != null) return report("dummy.string isn't null");
Node min = dummy.right;
while(min != null && min.left != null) min = min.left;
if(dummy.next != min)return report("dummy.next isn't the min");
int n = checkInRange(dummy.right, null, null, min, null);
if (n < 0) return false; // problem already reported
if (n != numEntries) return report("manyNodes is " + numEntries + " but should be " + n);
return true;
}