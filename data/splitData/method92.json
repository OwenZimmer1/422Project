{
  "method": "/*** Place the contents of another sequence (which may be the\n* same one as this!) into this sequence before the current element (if any).\n* @param addend\n*   a sequence whose contents will be placed into this sequence\n* @precondition\n*   The parameter, addend, is not null.\n* @postcondition\n*   The elements from addend have been placed into\n*   this sequence. The current element of this sequence (if any)\n*   is unchanged.  The addend is unchanged.\n* @exception NullPointerException\n*   Indicates that addend is null.\n* @exception OutOfMemoryError\n*   Indicates insufficient memory to increase the size of this sequence.\n**/\npublic void insertAll(LinkedSequence<E> addend) {\n\nassert wellFormed() : \"invariant failed at start of addAll\";\nif(addend == null) throw new NullPointerException(\"addend is null\");\nif(addend.size == 0) return;\n\nLinkedSequence<E> clone = addend.clone();\nif(size == 0) {\nNode<E> cloneHead = clone.getHead();\nclone.tail.next = precursor.next;\nprecursor.next = cloneHead;\nprecursor = clone.tail;\ntail = clone.tail;\n}else if(precursor == tail) {\nNode<E> cloneHead = clone.getHead();\nclone.tail.next = precursor.next;\nprecursor.next = cloneHead;\nprecursor = clone.tail;\ntail = clone.tail;\n}else {\nNode<E> cloneHead = clone.getHead();\nclone.tail.next = precursor.next;\nprecursor.next = cloneHead;\nprecursor = clone.tail;\n\n}\n\n\nsize += clone.size;\n\nassert wellFormed() : \"invariant failed at end of addAll\";\n}"
}